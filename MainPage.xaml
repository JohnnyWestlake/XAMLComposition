<Page
    x:Class="XAMLComposition.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="using:XAMLComposition.Behaviors"
    xmlns:c="using:XAMLComposition.Core"
    xmlns:controls="using:XAMLComposition.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:XAMLComposition"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wuxc="using:Windows.UI.Xaml.Controls"
    x:Name="Root"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">

    <Page.Resources>
        <x:String x:Key="RotationExpression">
            (p.Position.Y &lt; src.CenterPoint.Y) || (p.Position.X &gt; src.CenterPoint.X &amp;&amp; p.Position.Y == src.CenterPoint.Y) ? 45 * ((Clamp(Distance(src.CenterPoint, p.Position), 0, props.D2C) % props.D2C)/props.D2C) : (p.Position.Y &gt; src.CenterPoint.Y) || (p.Position.X &lt; src.CenterPoint.X &amp;&amp; p.Position.Y == src.CenterPoint.Y) ? -45 * ((Clamp(Distance(src.CenterPoint, p.Position), 0, props.D2C) % props.D2C)/props.D2C) : this.CurrentValue
        </x:String>
        <x:String x:Key="RotationAxisExpression">
            (p.Position.Y &lt; src.CenterPoint.Y &amp;&amp; p.Position.X &lt; src.CenterPoint.X) ? Vector3(-(-src.CenterPoint.Y + p.Position.Y), -src.CenterPoint .X + p.Position.X, 0) : (p.Position.Y &lt; src.CenterPoint.Y &amp;&amp; p.Position.X &gt; src.CenterPoint.X) ? Vector3(-(-src.CenterPoint.Y + p.Position.Y), p.Position.X - src.CenterPoint.X, 0) : (p.Position.Y &gt; src.CenterPoint.Y &amp;&amp; p.Position.X &lt; src.CenterPoint.X) ? Vector3((p.Position.Y - src.CenterPoint.Y), src.CenterPoint.X - p.Position.X, 0) : (p.Position.Y &gt; src.CenterPoint.Y &amp;&amp; p.Position.X &gt; src.CenterPoint.X) ? Vector3((p.Position.Y - src.CenterPoint.Y), -(p.Position.X - src.CenterPoint.X), 0) : (p.Position.Y == src.CenterPoint.Y &amp;&amp; p.Position.X != src.CenterPoint.X) ? Vector3(0, src.CenterPoint.X, 0) : (p.Position.Y != src.CenterPoint.Y &amp;&amp; p.Position.X == src.CenterPoint.X) ? Vector3(src.CenterPoint.Y, 0, 0) : this.CurrentValue
        </x:String>


        <!--
            We can't make this in the Style property setter as x:Bind
            does not work inside property setters :')
        -->
        <c:PropertyBinderCollection x:Name="SliderBinders">
            <c:DPBinderBase Key="Margin" Property="{x:Bind wuxc:Slider.MarginProperty}" />
            <c:DPBinderBase Key="Value" Property="{x:Bind wuxc:Slider.ValueProperty}" />
        </c:PropertyBinderCollection>

        <Style TargetType="Slider">
            <Setter Property="c:Composition.PropertyBinders" Value="{StaticResource SliderBinders}" />
        </Style>
    </Page.Resources>

    <Grid>
        <ScrollViewer x:Name="Scroller">
            <Grid Height="2000">
                <Grid.Background>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Color="#FF9BB3E6" />
                        <GradientStop Offset="1" Color="#FF9FFF54" />
                    </LinearGradientBrush>
                </Grid.Background>


                <StackPanel c:CompositionFactory.EnableDepthMatrix="True" Spacing="12">
                    <c:Composition.Animations>
                        <!--
                            As you scroll the ScrollViewer the content will not move as
                            we bind it to the opposite of the ScrollViewer translation
                        -->
                        <c:XAMLExpressionAnimation Expression="Vector3(-scroll.Translation.X, -scroll.Translation.Y, 0)" Target="Translation">
                            <c:ScrollManipulationSetParameter Key="scroll" Element="{x:Bind Scroller}" />
                        </c:XAMLExpressionAnimation>
                    </c:Composition.Animations>
                    <Slider
                        x:Name="Slider"
                        Margin="4,0"
                        Maximum="360"
                        Value="66">
                        <!--<c:Composition.PropertyBinders>
                            <c:DPBinderBase Key="Rotation" Property="{x:Bind wuxc:Slider.ValueProperty}" />
                        </c:Composition.PropertyBinders>-->
                    </Slider>

                    <Slider x:Name="Slider2" Maximum="40" />

                    <Slider
                        x:Name="Slider3"
                        LargeChange="0.01"
                        Maximum="2"
                        Minimum="0"
                        SmallChange="0.01"
                        StepFrequency="0.01"
                        Value="1" />

                    <Border
                        x:Name="Source"
                        Width="400"
                        Height="200"
                        Background="Green">
                        <i:Interaction.Behaviors>
                            <i:EventTriggerBehavior EventName="Loaded">
                                <b:SetAnimationCollectionAction Target="{x:Bind Spotlight}">
                                    <c:XAMLAnimationCollection>
                                        <c:XAMLExpressionAnimation
                                            AnimationTarget="CompositionObjectProperties"
                                            Expression="p.Value"
                                            Target="Height">
                                            <c:ElementVisualPropertySetParameter Key="p" Element="{x:Bind Slider}" />
                                        </c:XAMLExpressionAnimation>
                                    </c:XAMLAnimationCollection>
                                </b:SetAnimationCollectionAction>
                            </i:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <Border.Lights>
                            <c:AmbLight />
                            <c:SimpleSpotLight x:Name="Spotlight" />
                        </Border.Lights>
                        <c:Composition.Animations>
                            <c:CenterPointExpressionAnimation />

                            <c:XAMLExpressionAnimation Expression="Vector3(0, slider.Value, 0)" Target="Translation">
                                <c:ElementVisualPropertySetParameter Key="slider" Element="{x:Bind Slider2}" />
                            </c:XAMLExpressionAnimation>
                            <!--<c:XAMLExpressionAnimation
                                DefaultValue="45"
                                Expression="p.Rotation"
                                Target="RotationAngleInDegrees">-->


                            <!--
                                Both of these work, but the latter is more efficient if
                                the animation is being applied to many objects
                            -->

                            <!--<c:DoubleParameter
                                    Key="Rotation"
                                    BindingMode="Live"
                                    Value="{x:Bind Slider.Value, Mode=OneWay}" />-->


                            <!--<c:ElementVisualPropertySetParameter Key="p" Element="{x:Bind Slider}" />
                            </c:XAMLExpressionAnimation>-->
                            <c:XAMLExpressionAnimation
                                AnimationTarget="CompositionObjectProperties"
                                DefaultValue="0"
                                Expression="Sqrt(Square(src.Size.X / 2f) + Square(src.Size.Y / 2f))"
                                Target="D2C">
                                <c:ElementVisualParameter Key="src" Element="{x:Bind Source}" />
                            </c:XAMLExpressionAnimation>
                        </c:Composition.Animations>
                    </Border>

                    <controls:WrapPanel
                        HorizontalAlignment="Center"
                        HorizontalSpacing="12"
                        VerticalSpacing="12">
                        <FrameworkElement.Lights>
                            <c:AmbLight />
                            <c:SimpleSpotLight x:Name="Light2" />
                        </FrameworkElement.Lights>
                        <i:Interaction.Behaviors>
                            <i:EventTriggerBehavior EventName="Loaded">
                                <b:SetAnimationCollectionAction Target="{x:Bind Light2}">
                                    <c:XAMLAnimationCollection>
                                        <!--<c:XAMLExpressionAnimation
                                            AnimationTarget="CompositionObjectProperties"
                                            Expression="15"
                                            Target="Height" />-->
                                        <c:XAMLExpressionAnimation
                                            AnimationTarget="CompositionObjectProperties"
                                            Expression="p.Value"
                                            Target="Height">
                                            <c:ElementVisualPropertySetParameter Key="p" Element="{x:Bind Slider}" />
                                        </c:XAMLExpressionAnimation>
                                    </c:XAMLAnimationCollection>
                                </b:SetAnimationCollectionAction>
                            </i:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <Panel.Resources>
                            <Style TargetType="Border">
                                <Setter Property="Width" Value="100" />
                                <Setter Property="Height" Value="100" />
                                <Setter Property="c:Properties.UseLights" Value="False" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.7" Color="Red" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="c:Composition.Animations">
                                    <Setter.Value>
                                        <c:XAMLAnimationCollection>

                                            <c:XAMLExpressionAnimation Expression="props.Translation" Target="Translation">
                                                <c:ElementVisualPropertySetParameter Key="props" Element="{x:Bind Source}" />
                                            </c:XAMLExpressionAnimation>

                                            <c:XAMLExpressionAnimation Expression="Vector3(props.Value, props.Value, 1)" Target="Scale">
                                                <c:ElementVisualPropertySetParameter Key="props" Element="{x:Bind Slider3}" />
                                            </c:XAMLExpressionAnimation>

                                            <!--<c:XAMLExpressionAnimation Expression="Vector3((p.Position.X/src.Size.X) * this.Target.Size.X, (p.Position.Y/src.Size.Y) * this.Target.Size.Y, 0)" Target="CenterPoint">
                                                <c:ElementVisualParameter Key="src" Element="{x:Bind Source}" />
                                                <c:PointerSetParameter Key="p" Element="{x:Bind Source}" />
                                            </c:XAMLExpressionAnimation>
                                            <c:XAMLExpressionAnimation Expression="srcProps.Rotation" Target="RotationAngleInDegrees">
                                                <c:ElementVisualPropertySetParameter Key="srcProps" Element="{x:Bind Slider}" />
                                            </c:XAMLExpressionAnimation>
                                            <c:XAMLExpressionAnimation Expression="Vector3(0.5 + (p.Position.X/src.Size.X),0.5 + (p.Position.Y/src.Size.Y),0)" Target="Scale">
                                                <c:ElementVisualParameter Key="src" Element="{x:Bind Source}" />
                                                <c:PointerSetParameter Key="p" Element="{x:Bind Source}" />
                                            </c:XAMLExpressionAnimation>-->


                                            <!--  3D Tilt  -->

                                            <c:CenterPointExpressionAnimation />

                                            <c:XAMLExpressionAnimation Expression="{StaticResource RotationExpression}" Target="RotationAngleInDegrees">
                                                <c:ElementVisualParameter Key="src" Element="{x:Bind Source}" />
                                                <c:ElementVisualPropertySetParameter Key="props" Element="{x:Bind Source}" />
                                                <c:PointerSetParameter Key="p" Element="{x:Bind Source}" />
                                            </c:XAMLExpressionAnimation>

                                            <c:XAMLExpressionAnimation Expression="{StaticResource RotationAxisExpression}" Target="RotationAxis">
                                                <c:ElementVisualParameter Key="src" Element="{x:Bind Source}" />
                                                <c:PointerSetParameter Key="p" Element="{x:Bind Source}" />
                                            </c:XAMLExpressionAnimation>

                                        </c:XAMLAnimationCollection>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Panel.Resources>


                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />
                        <Border />

                    </controls:WrapPanel>

                </StackPanel>

            </Grid>
        </ScrollViewer>
    </Grid>
</Page>
